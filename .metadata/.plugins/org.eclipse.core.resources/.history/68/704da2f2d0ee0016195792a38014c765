package com.sg.ntu.mdp;

public class Algothrim {
	private float frontMidSensor;
	private float frontLeftSensor;
	private float frontRightSensor;
	private float rightSensor;
	private float leftSensor5;
	
	private Direction currentDirection = Direction.East;
	private float sensorTrashold = 4.00f;
	
	private static int[][]exploredData;
	private static int[][]obstacleData;
	private static int[][]currentLocation;
	
	private Algothrim(int[][] exploredData, int[][]obstacleData, int[][] currentLocation){
		this.exploredData = exploredData;
		this.obstacleData = obstacleData;
		if(currentLocation != null){
			this.currentLocation = currentLocation;
		}
	}
	
	private void explore(float frontMidSensor, float frontLeftSensor, float frontRightSensor, float rightSensor, float leftSensor, final RobotCallback callback){
		//TODO: algo to moce the next move
		if(currentDirection == Direction.East){
			if(frontMidSensor>sensorTrashold && ){
				
			}
		}
	}
	
	private void returnToStart(){
		//TODO: algo to make the robot go back to start line;
	}
	
	private void findPath(int[][] currentLocation){
		//TODO: get the shortest path;
	}
	
	
}
